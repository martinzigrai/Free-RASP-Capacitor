{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,WAAY,SAAQ,SAAS;IACxC,iBAAiB;QACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,oBAAoB;QAClB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,oBAAoB;QAClB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,6DAA6D;IAC7D,KAAK,CAAC,WAAW,CAAC,QAAoC;QACpD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { FreeraspPlugin, FreeraspConfig } from './definitions';\n\nexport class FreeraspWeb extends WebPlugin implements FreeraspPlugin {\n  onInvalidCallback(): void {\n    throw new Error('Method not implemented.');\n  }\n  getThreatIdentifiers(): Promise<{ ids: number[]; }> {\n    throw new Error('Method not implemented.');\n  }\n  getThreatChannelData(): Promise<{ ids: [string, string]; }> {\n    throw new Error('Method not implemented.');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async talsecStart(_options: { config: FreeraspConfig }): Promise<{ started: boolean }> {\n    throw new Error('Method not implemented.');\n  }\n}\n"]}